name: Deploy to ECS (Simple)

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: simple-web-server
  ECS_SERVICE: simple-web-service
  ECS_CLUSTER: simple-web-cluster

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
        
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI
        
        echo "New image: $IMAGE_URI"

    - name: Force new deployment
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
        echo "üöÄ Forced new deployment triggered!"
        
        # Î∞∞Ìè¨ ÏÉÅÌÉú ÌôïÏù∏ (ÏÑ†ÌÉùÏÇ¨Ìï≠)
        aws ecs wait services-stable --cluster $ECS_CLUSTER --services $ECS_SERVICE --max-attempts 10 --delay 30
        echo "‚úÖ Deployment completed!"
